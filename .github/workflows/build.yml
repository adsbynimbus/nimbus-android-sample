name: Sample App Build

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'

  pull_request:
    branches:
      - main

permissions: read-all

env:
  ORG_GRADLE_PROJECT_openrtbUsername: ${{ github.actor }}
  ORG_GRADLE_PROJECT_openrtbPassword: ${{ github.token }}

jobs:
  build:
    name: Sample App Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
         lfs: true

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Run Gradle Build
        run: ./gradlew build check --stacktrace

  next-build:
    name: Internal App Build
    if: ${{ github.event_name == 'pull_request' && !startsWith(github.ref_name, 'arch')}}
    environment: internal
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Internal code
        uses: actions/checkout@v3
        with:
          repository: 'timehop/nimbus-android'
          ssh-key: ${{ secrets.NIMBUS_ANDROID_KEY }}
          lfs: true

      - name: Checkout Sample code
        uses: actions/checkout@v3
        with:
          path: 'sample'
          lfs: true

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Firebase Key
        run: echo ${{ secrets.FIREBASE_DEPLOY_JSON }} | base64 --decode > ./firebase.json

      - name: Build and Deploy to Firebase
        env:
          ORG_GRADLE_PROJECT_firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
          ORG_GRADLE_PROJECT_releaseDescription: ${{ github.event.pull_request.body || github.event.head_commit.message }}
          ORG_GRADLE_PROJECT_sample_aps_banner: ${{ secrets.SAMPLE_APS_BANNER }}
          ORG_GRADLE_PROJECT_sample_aps_static: ${{ secrets.SAMPLE_APS_STATIC }}
          ORG_GRADLE_PROJECT_sample_aps_video: ${{ secrets.SAMPLE_APS_VIDEO }}
          ORG_GRADLE_PROJECT_sample_fan_native_id: ${{ secrets.SAMPLE_FAN_NATIVE_ID }}
          ORG_GRADLE_PROJECT_sample_fan_native_320_id: ${{ secrets.SAMPLE_FAN_NATIVE_320_ID }}
          ORG_GRADLE_PROJECT_sample_fan_banner_320_id: ${{ secrets.SAMPLE_FAN_BANNER_320_ID }}
          ORG_GRADLE_PROJECT_sample_fan_interstitial_id: ${{ secrets.SAMPLE_FAN_INTERSTITIAL_ID }}
          ORG_GRADLE_PROJECT_sample_gam_placement_id: ${{ secrets.SAMPLE_GAM_PLACEMENT_ID }}
          ORG_GRADLE_PROJECT_sample_unity_game_id: ${{ secrets.SAMPLE_UNITY_GAME_ID }}
        run: ./gradlew :app:build appDistributionUploadDebug --stacktrace
