name: Sample App Build

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'

  pull_request:
    branches:
      - main

env:
  ORG_GRADLE_PROJECT_openrtbUsername: ${{ github.actor }}
  ORG_GRADLE_PROJECT_openrtbPassword: ${{ github.token }}

jobs:
  build:
    name: Sample App Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
         lfs: true

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/configuration-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
            ${{ runner.os }}-gradle-

      - name: Run Gradle Build
        run: ./gradlew build check --stacktrace

  next-build:
    name: Internal App Build
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Internal code
        uses: actions/checkout@v3
        with:
          repository: 'timehop/nimbus-android'
          lfs: true

      - name: Checkout Sample code
        uses: actions/checkout@v3
        with:
          path: 'shared'
          lfs: true

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ./.gradle/configuration-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
            ${{ runner.os }}-gradle-

      - name: Setup Firebase Key
        run: echo ${{ secrets.FIREBASE_SERVICE_KEY_JSON }} | base64 --decode > ./firebase.json

      - name: Build and Deploy to Firebase
        env:
          ORG_GRADLE_PROJECT_firebaseAppId: ${{ secrets.FIREBASE_APP_ID }}
          ORG_GRADLE_PROJECT_releaseDescription: ${{ github.event.pull_request.body || github.event.head_commit.message }}
        run: ./gradlew appDistributionUploadDebug --stacktrace
